/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.mwaleria.safecommunicator.client.gui;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.swing.DefaultListModel;

import pl.mwaleria.safecommunicator.client.ClientManager;
import pl.mwaleria.safecommunicator.client.msg.ChatThread;
import pl.mwaleria.safecommunicator.core.User;
import pl.mwaleria.safecommunicator.core.gui.PopupListener;

/**
 *
 * @author waler
 */
public class CommunicatorForm extends javax.swing.JFrame {

	private final DefaultListModel<User> usersModel = new DefaultListModel<>();

	private final ClientManager clientManager;


	/**
	 * Creates new form CommunicatorForm
	 */
	public CommunicatorForm(ClientManager clientManager) {
		initComponents();
		listUsers.setModel(usersModel);
		listUsers.addMouseListener(new PopupListener(popupMenu));
		openConversations = new HashMap<>();
		this.clientManager = clientManager;
	}

	public void addUser(User u) {
		usersModel.addElement(u);
	}

	public void removeUser(User u) {
		usersModel.removeElement(u);
	}

	public void addAllUsers(List<User> users) {
		for (User u : users) {
			usersModel.addElement(u);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jMenuItem1 = new javax.swing.JMenuItem();
		popupMenu = new javax.swing.JPopupMenu();
		menuStartConversation = new javax.swing.JMenuItem();
		serverStatus = new javax.swing.JLabel();
		buttonReconnect = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		listUsers = new javax.swing.JList();
		labelUserList = new javax.swing.JLabel();
		tabbedPanel = new javax.swing.JTabbedPane();
		manuBar = new javax.swing.JMenuBar();
		menuFile = new javax.swing.JMenu();
		menuFileExit = new javax.swing.JMenuItem();
		menuHelp = new javax.swing.JMenu();
		menuHelpAbout = new javax.swing.JMenuItem();

		jMenuItem1.setText("jMenuItem1");

		menuStartConversation.setText("New Conversation");
		menuStartConversation.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				menuStartConversationActionPerformed(evt);
			}
		});
		popupMenu.add(menuStartConversation);

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		serverStatus.setText("Server is ONLINE");

		buttonReconnect.setText("Reconnect");
		buttonReconnect.setEnabled(false);

		jScrollPane1.setViewportView(listUsers);

		labelUserList.setText("User List");

		menuFile.setText("File");

		menuFileExit.setText("EXIT");
		menuFile.add(menuFileExit);

		manuBar.add(menuFile);

		menuHelp.setText("Help");

		menuHelpAbout.setText("About");
		menuHelp.add(menuHelpAbout);

		manuBar.add(menuHelp);

		setJMenuBar(manuBar);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup().addComponent(serverStatus).addGap(18, 18, 18)
										.addComponent(buttonReconnect).addGap(0, 197, Short.MAX_VALUE))
						.addGroup(layout.createSequentialGroup()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(labelUserList))
								.addGap(18, 18, 18).addComponent(tabbedPanel)))
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(serverStatus).addComponent(buttonReconnect))
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(3, 3, 3).addComponent(labelUserList)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))
						.addGroup(layout.createSequentialGroup()
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(tabbedPanel)))
						.addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void menuStartConversationActionPerformed(java.awt.event.ActionEvent evt) { // GEN-FIRST:event_menuStartConversationActionPerformed
            List list = listUsers.getSelectedValuesList();
            if(!list.isEmpty()) {
                int size = list.size()+1;
                Long[] array = new Long[size];
                for(int i=0; i < list.size();i++) {
                    User u = (User) list.get(i);
                    array[i] = u.getId();
                }
                array[size-1] = clientManager.getCurrentUserId();
                
                this.addConversation(array);
            }
	}// GEN-LAST:event_menuStartConversationActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton buttonReconnect;
	private javax.swing.JMenuItem jMenuItem1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel labelUserList;
	private javax.swing.JList listUsers;
	private javax.swing.JMenuBar manuBar;
	private javax.swing.JMenu menuFile;
	private javax.swing.JMenuItem menuFileExit;
	private javax.swing.JMenu menuHelp;
	private javax.swing.JMenuItem menuHelpAbout;
	private javax.swing.JMenuItem menuStartConversation;
	private javax.swing.JPopupMenu popupMenu;
	private javax.swing.JLabel serverStatus;
	private javax.swing.JTabbedPane tabbedPanel;
	// End of variables declaration//GEN-END:variables

	private Map<ChatThread, ChatPanel> openConversations;

	public void addConversation(Long[] users) {
		ChatThread ct = new ChatThread(users);
		if (openConversations.containsKey(ct)) {
			ChatPanel chatPanel = new ChatPanel(this, ct);
			tabbedPanel.add(chatPanel);
			openConversations.put(ct, chatPanel);
		}
	}

	void sendMessage(String text, ChatThread chatTread) {
		Set<Long> users = chatTread.getOtherUsersIn();
		Long[] array = new Long[users.size()];
		users.toArray(array);
		clientManager.sendMessage(text, array);
	}

}
